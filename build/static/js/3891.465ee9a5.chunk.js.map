{"version":3,"file":"static/js/3891.465ee9a5.chunk.js","mappings":"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","sources":["../node_modules/@wormhole-foundation/wormhole-connect/lib/secp256k1-BFBj5yVh.mjs"],"sourcesContent":["import { H as Qt, F as Nt, G as Et, I as Jt, J as de, K as he, L as P, N as ge, P as we, Q as pe, U as be } from \"./solana-CIjJKPC4.mjs\";\nfunction ye(n, e, t, r) {\n  if (typeof n.setBigUint64 == \"function\")\n    return n.setBigUint64(e, t, r);\n  const o = BigInt(32), s = BigInt(4294967295), c = Number(t >> o & s), f = Number(t & s), i = r ? 4 : 0, u = r ? 0 : 4;\n  n.setUint32(e + i, c, r), n.setUint32(e + u, f, r);\n}\nfunction me(n, e, t) {\n  return n & e ^ ~n & t;\n}\nfunction xe(n, e, t) {\n  return n & e ^ n & t ^ e & t;\n}\nclass Ee extends Qt {\n  constructor(e, t, r, o) {\n    super(), this.blockLen = e, this.outputLen = t, this.padOffset = r, this.isLE = o, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(e), this.view = Nt(this.buffer);\n  }\n  update(e) {\n    Et(this);\n    const { view: t, buffer: r, blockLen: o } = this;\n    e = Jt(e);\n    const s = e.length;\n    for (let c = 0; c < s; ) {\n      const f = Math.min(o - this.pos, s - c);\n      if (f === o) {\n        const i = Nt(e);\n        for (; o <= s - c; c += o)\n          this.process(i, c);\n        continue;\n      }\n      r.set(e.subarray(c, c + f), this.pos), this.pos += f, c += f, this.pos === o && (this.process(t, 0), this.pos = 0);\n    }\n    return this.length += e.length, this.roundClean(), this;\n  }\n  digestInto(e) {\n    Et(this), de(e, this), this.finished = !0;\n    const { buffer: t, view: r, blockLen: o, isLE: s } = this;\n    let { pos: c } = this;\n    t[c++] = 128, this.buffer.subarray(c).fill(0), this.padOffset > o - c && (this.process(r, 0), c = 0);\n    for (let h = c; h < o; h++)\n      t[h] = 0;\n    ye(r, o - 8, BigInt(this.length * 8), s), this.process(r, 0);\n    const f = Nt(e), i = this.outputLen;\n    if (i % 4)\n      throw new Error(\"_sha2: outputLen should be aligned to 32bit\");\n    const u = i / 4, y = this.get();\n    if (u > y.length)\n      throw new Error(\"_sha2: outputLen bigger than state\");\n    for (let h = 0; h < u; h++)\n      f.setUint32(4 * h, y[h], s);\n  }\n  digest() {\n    const { buffer: e, outputLen: t } = this;\n    this.digestInto(e);\n    const r = e.slice(0, t);\n    return this.destroy(), r;\n  }\n  _cloneInto(e) {\n    e || (e = new this.constructor()), e.set(...this.get());\n    const { blockLen: t, buffer: r, length: o, finished: s, destroyed: c, pos: f } = this;\n    return e.length = o, e.pos = f, e.finished = s, e.destroyed = c, o % t && e.buffer.set(r), e;\n  }\n}\nconst Be = /* @__PURE__ */ new Uint32Array([\n  1116352408,\n  1899447441,\n  3049323471,\n  3921009573,\n  961987163,\n  1508970993,\n  2453635748,\n  2870763221,\n  3624381080,\n  310598401,\n  607225278,\n  1426881987,\n  1925078388,\n  2162078206,\n  2614888103,\n  3248222580,\n  3835390401,\n  4022224774,\n  264347078,\n  604807628,\n  770255983,\n  1249150122,\n  1555081692,\n  1996064986,\n  2554220882,\n  2821834349,\n  2952996808,\n  3210313671,\n  3336571891,\n  3584528711,\n  113926993,\n  338241895,\n  666307205,\n  773529912,\n  1294757372,\n  1396182291,\n  1695183700,\n  1986661051,\n  2177026350,\n  2456956037,\n  2730485921,\n  2820302411,\n  3259730800,\n  3345764771,\n  3516065817,\n  3600352804,\n  4094571909,\n  275423344,\n  430227734,\n  506948616,\n  659060556,\n  883997877,\n  958139571,\n  1322822218,\n  1537002063,\n  1747873779,\n  1955562222,\n  2024104815,\n  2227730452,\n  2361852424,\n  2428436474,\n  2756734187,\n  3204031479,\n  3329325298\n]), Q = /* @__PURE__ */ new Uint32Array([\n  1779033703,\n  3144134277,\n  1013904242,\n  2773480762,\n  1359893119,\n  2600822924,\n  528734635,\n  1541459225\n]), J = /* @__PURE__ */ new Uint32Array(64);\nclass ve extends Ee {\n  constructor() {\n    super(64, 32, 8, !1), this.A = Q[0] | 0, this.B = Q[1] | 0, this.C = Q[2] | 0, this.D = Q[3] | 0, this.E = Q[4] | 0, this.F = Q[5] | 0, this.G = Q[6] | 0, this.H = Q[7] | 0;\n  }\n  get() {\n    const { A: e, B: t, C: r, D: o, E: s, F: c, G: f, H: i } = this;\n    return [e, t, r, o, s, c, f, i];\n  }\n  // prettier-ignore\n  set(e, t, r, o, s, c, f, i) {\n    this.A = e | 0, this.B = t | 0, this.C = r | 0, this.D = o | 0, this.E = s | 0, this.F = c | 0, this.G = f | 0, this.H = i | 0;\n  }\n  process(e, t) {\n    for (let h = 0; h < 16; h++, t += 4)\n      J[h] = e.getUint32(t, !1);\n    for (let h = 16; h < 64; h++) {\n      const l = J[h - 15], m = J[h - 2], N = P(l, 7) ^ P(l, 18) ^ l >>> 3, b = P(m, 17) ^ P(m, 19) ^ m >>> 10;\n      J[h] = b + J[h - 7] + N + J[h - 16] | 0;\n    }\n    let { A: r, B: o, C: s, D: c, E: f, F: i, G: u, H: y } = this;\n    for (let h = 0; h < 64; h++) {\n      const l = P(f, 6) ^ P(f, 11) ^ P(f, 25), m = y + l + me(f, i, u) + Be[h] + J[h] | 0, b = (P(r, 2) ^ P(r, 13) ^ P(r, 22)) + xe(r, o, s) | 0;\n      y = u, u = i, i = f, f = c + m | 0, c = s, s = o, o = r, r = m + b | 0;\n    }\n    r = r + this.A | 0, o = o + this.B | 0, s = s + this.C | 0, c = c + this.D | 0, f = f + this.E | 0, i = i + this.F | 0, u = u + this.G | 0, y = y + this.H | 0, this.set(r, o, s, c, f, i, u, y);\n  }\n  roundClean() {\n    J.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);\n  }\n}\nconst Se = /* @__PURE__ */ he(() => new ve());\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst Bt = /* @__PURE__ */ BigInt(0), vt = /* @__PURE__ */ BigInt(1), Ae = /* @__PURE__ */ BigInt(2);\nfunction it(n) {\n  return n instanceof Uint8Array || ArrayBuffer.isView(n) && n.constructor.name === \"Uint8Array\";\n}\nfunction yt(n) {\n  if (!it(n))\n    throw new Error(\"Uint8Array expected\");\n}\nfunction ut(n, e) {\n  if (typeof e != \"boolean\")\n    throw new Error(n + \" boolean expected, got \" + e);\n}\nconst Ie = /* @__PURE__ */ Array.from({ length: 256 }, (n, e) => e.toString(16).padStart(2, \"0\"));\nfunction lt(n) {\n  yt(n);\n  let e = \"\";\n  for (let t = 0; t < n.length; t++)\n    e += Ie[n[t]];\n  return e;\n}\nfunction at(n) {\n  const e = n.toString(16);\n  return e.length & 1 ? \"0\" + e : e;\n}\nfunction Rt(n) {\n  if (typeof n != \"string\")\n    throw new Error(\"hex string expected, got \" + typeof n);\n  return n === \"\" ? Bt : BigInt(\"0x\" + n);\n}\nconst D = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction Yt(n) {\n  if (n >= D._0 && n <= D._9)\n    return n - D._0;\n  if (n >= D.A && n <= D.F)\n    return n - (D.A - 10);\n  if (n >= D.a && n <= D.f)\n    return n - (D.a - 10);\n}\nfunction dt(n) {\n  if (typeof n != \"string\")\n    throw new Error(\"hex string expected, got \" + typeof n);\n  const e = n.length, t = e / 2;\n  if (e % 2)\n    throw new Error(\"hex string expected, got unpadded hex of length \" + e);\n  const r = new Uint8Array(t);\n  for (let o = 0, s = 0; o < t; o++, s += 2) {\n    const c = Yt(n.charCodeAt(s)), f = Yt(n.charCodeAt(s + 1));\n    if (c === void 0 || f === void 0) {\n      const i = n[s] + n[s + 1];\n      throw new Error('hex string expected, got non-hex character \"' + i + '\" at index ' + s);\n    }\n    r[o] = c * 16 + f;\n  }\n  return r;\n}\nfunction rt(n) {\n  return Rt(lt(n));\n}\nfunction Mt(n) {\n  return yt(n), Rt(lt(Uint8Array.from(n).reverse()));\n}\nfunction ht(n, e) {\n  return dt(n.toString(16).padStart(e * 2, \"0\"));\n}\nfunction Vt(n, e) {\n  return ht(n, e).reverse();\n}\nfunction Ne(n) {\n  return dt(at(n));\n}\nfunction K(n, e, t) {\n  let r;\n  if (typeof e == \"string\")\n    try {\n      r = dt(e);\n    } catch (s) {\n      throw new Error(n + \" must be hex string or Uint8Array, cause: \" + s);\n    }\n  else if (it(e))\n    r = Uint8Array.from(e);\n  else\n    throw new Error(n + \" must be hex string or Uint8Array\");\n  const o = r.length;\n  if (typeof t == \"number\" && o !== t)\n    throw new Error(n + \" of length \" + t + \" expected, got \" + o);\n  return r;\n}\nfunction bt(...n) {\n  let e = 0;\n  for (let r = 0; r < n.length; r++) {\n    const o = n[r];\n    yt(o), e += o.length;\n  }\n  const t = new Uint8Array(e);\n  for (let r = 0, o = 0; r < n.length; r++) {\n    const s = n[r];\n    t.set(s, o), o += s.length;\n  }\n  return t;\n}\nfunction qe(n, e) {\n  if (n.length !== e.length)\n    return !1;\n  let t = 0;\n  for (let r = 0; r < n.length; r++)\n    t |= n[r] ^ e[r];\n  return t === 0;\n}\nfunction Oe(n) {\n  if (typeof n != \"string\")\n    throw new Error(\"string expected\");\n  return new Uint8Array(new TextEncoder().encode(n));\n}\nconst qt = (n) => typeof n == \"bigint\" && Bt <= n;\nfunction St(n, e, t) {\n  return qt(n) && qt(e) && qt(t) && e <= n && n < t;\n}\nfunction ot(n, e, t, r) {\n  if (!St(e, t, r))\n    throw new Error(\"expected valid \" + n + \": \" + t + \" <= n < \" + r + \", got \" + e);\n}\nfunction te(n) {\n  let e;\n  for (e = 0; n > Bt; n >>= vt, e += 1)\n    ;\n  return e;\n}\nfunction Le(n, e) {\n  return n >> BigInt(e) & vt;\n}\nfunction He(n, e, t) {\n  return n | (t ? vt : Bt) << BigInt(e);\n}\nconst jt = (n) => (Ae << BigInt(n - 1)) - vt, Ot = (n) => new Uint8Array(n), Ft = (n) => Uint8Array.from(n);\nfunction ee(n, e, t) {\n  if (typeof n != \"number\" || n < 2)\n    throw new Error(\"hashLen must be a number\");\n  if (typeof e != \"number\" || e < 2)\n    throw new Error(\"qByteLen must be a number\");\n  if (typeof t != \"function\")\n    throw new Error(\"hmacFn must be a function\");\n  let r = Ot(n), o = Ot(n), s = 0;\n  const c = () => {\n    r.fill(1), o.fill(0), s = 0;\n  }, f = (...h) => t(o, r, ...h), i = (h = Ot()) => {\n    o = f(Ft([0]), h), r = f(), h.length !== 0 && (o = f(Ft([1]), h), r = f());\n  }, u = () => {\n    if (s++ >= 1e3)\n      throw new Error(\"drbg: tried 1000 values\");\n    let h = 0;\n    const l = [];\n    for (; h < e; ) {\n      r = f();\n      const m = r.slice();\n      l.push(m), h += r.length;\n    }\n    return bt(...l);\n  };\n  return (h, l) => {\n    c(), i(h);\n    let m;\n    for (; !(m = l(u())); )\n      i();\n    return c(), m;\n  };\n}\nconst Ue = {\n  bigint: (n) => typeof n == \"bigint\",\n  function: (n) => typeof n == \"function\",\n  boolean: (n) => typeof n == \"boolean\",\n  string: (n) => typeof n == \"string\",\n  stringOrUint8Array: (n) => typeof n == \"string\" || it(n),\n  isSafeInteger: (n) => Number.isSafeInteger(n),\n  array: (n) => Array.isArray(n),\n  field: (n, e) => e.Fp.isValid(n),\n  hash: (n) => typeof n == \"function\" && Number.isSafeInteger(n.outputLen)\n};\nfunction mt(n, e, t = {}) {\n  const r = (o, s, c) => {\n    const f = Ue[s];\n    if (typeof f != \"function\")\n      throw new Error(\"invalid validator function\");\n    const i = n[o];\n    if (!(c && i === void 0) && !f(i, n))\n      throw new Error(\"param \" + String(o) + \" is invalid. Expected \" + s + \", got \" + i);\n  };\n  for (const [o, s] of Object.entries(e))\n    r(o, s, !1);\n  for (const [o, s] of Object.entries(t))\n    r(o, s, !0);\n  return n;\n}\nconst Te = () => {\n  throw new Error(\"not implemented\");\n};\nfunction _t(n) {\n  const e = /* @__PURE__ */ new WeakMap();\n  return (t, ...r) => {\n    const o = e.get(t);\n    if (o !== void 0)\n      return o;\n    const s = n(t, ...r);\n    return e.set(t, s), s;\n  };\n}\nconst _e = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  aInRange: ot,\n  abool: ut,\n  abytes: yt,\n  bitGet: Le,\n  bitLen: te,\n  bitMask: jt,\n  bitSet: He,\n  bytesToHex: lt,\n  bytesToNumberBE: rt,\n  bytesToNumberLE: Mt,\n  concatBytes: bt,\n  createHmacDrbg: ee,\n  ensureBytes: K,\n  equalBytes: qe,\n  hexToBytes: dt,\n  hexToNumber: Rt,\n  inRange: St,\n  isBytes: it,\n  memoized: _t,\n  notImplemented: Te,\n  numberToBytesBE: ht,\n  numberToBytesLE: Vt,\n  numberToHexUnpadded: at,\n  numberToVarBytesBE: Ne,\n  utf8ToBytes: Oe,\n  validateObject: mt\n}, Symbol.toStringTag, { value: \"Module\" }));\nclass ne extends Qt {\n  constructor(e, t) {\n    super(), this.finished = !1, this.destroyed = !1, ge(e);\n    const r = Jt(t);\n    if (this.iHash = e.create(), typeof this.iHash.update != \"function\")\n      throw new Error(\"Expected instance of class which extends utils.Hash\");\n    this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;\n    const o = this.blockLen, s = new Uint8Array(o);\n    s.set(r.length > o ? e.create().update(r).digest() : r);\n    for (let c = 0; c < s.length; c++)\n      s[c] ^= 54;\n    this.iHash.update(s), this.oHash = e.create();\n    for (let c = 0; c < s.length; c++)\n      s[c] ^= 106;\n    this.oHash.update(s), s.fill(0);\n  }\n  update(e) {\n    return Et(this), this.iHash.update(e), this;\n  }\n  digestInto(e) {\n    Et(this), we(e, this.outputLen), this.finished = !0, this.iHash.digestInto(e), this.oHash.update(e), this.oHash.digestInto(e), this.destroy();\n  }\n  digest() {\n    const e = new Uint8Array(this.oHash.outputLen);\n    return this.digestInto(e), e;\n  }\n  _cloneInto(e) {\n    e || (e = Object.create(Object.getPrototypeOf(this), {}));\n    const { oHash: t, iHash: r, finished: o, destroyed: s, blockLen: c, outputLen: f } = this;\n    return e = e, e.finished = o, e.destroyed = s, e.blockLen = c, e.outputLen = f, e.oHash = t._cloneInto(e.oHash), e.iHash = r._cloneInto(e.iHash), e;\n  }\n  destroy() {\n    this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy();\n  }\n}\nconst re = (n, e, t) => new ne(n, e).update(t).digest();\nre.create = (n, e) => new ne(n, e);\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst z = BigInt(0), T = BigInt(1), nt = /* @__PURE__ */ BigInt(2), ke = /* @__PURE__ */ BigInt(3), kt = /* @__PURE__ */ BigInt(4), Kt = /* @__PURE__ */ BigInt(5), Pt = /* @__PURE__ */ BigInt(8);\nfunction V(n, e) {\n  const t = n % e;\n  return t >= z ? t : e + t;\n}\nfunction ze(n, e, t) {\n  if (e < z)\n    throw new Error(\"invalid exponent, negatives unsupported\");\n  if (t <= z)\n    throw new Error(\"invalid modulus\");\n  if (t === T)\n    return z;\n  let r = T;\n  for (; e > z; )\n    e & T && (r = r * n % t), n = n * n % t, e >>= T;\n  return r;\n}\nfunction Y(n, e, t) {\n  let r = n;\n  for (; e-- > z; )\n    r *= r, r %= t;\n  return r;\n}\nfunction zt(n, e) {\n  if (n === z)\n    throw new Error(\"invert: expected non-zero number\");\n  if (e <= z)\n    throw new Error(\"invert: expected positive modulus, got \" + e);\n  let t = V(n, e), r = e, o = z, s = T;\n  for (; t !== z; ) {\n    const f = r / t, i = r % t, u = o - s * f;\n    r = t, t = i, o = s, s = u;\n  }\n  if (r !== T)\n    throw new Error(\"invert: does not exist\");\n  return V(o, e);\n}\nfunction Ce(n) {\n  const e = (n - T) / nt;\n  let t, r, o;\n  for (t = n - T, r = 0; t % nt === z; t /= nt, r++)\n    ;\n  for (o = nt; o < n && ze(o, e, n) !== n - T; o++)\n    if (o > 1e3)\n      throw new Error(\"Cannot find square root: likely non-prime P\");\n  if (r === 1) {\n    const c = (n + T) / kt;\n    return function(i, u) {\n      const y = i.pow(u, c);\n      if (!i.eql(i.sqr(y), u))\n        throw new Error(\"Cannot find square root\");\n      return y;\n    };\n  }\n  const s = (t + T) / nt;\n  return function(f, i) {\n    if (f.pow(i, e) === f.neg(f.ONE))\n      throw new Error(\"Cannot find square root\");\n    let u = r, y = f.pow(f.mul(f.ONE, o), t), h = f.pow(i, s), l = f.pow(i, t);\n    for (; !f.eql(l, f.ONE); ) {\n      if (f.eql(l, f.ZERO))\n        return f.ZERO;\n      let m = 1;\n      for (let b = f.sqr(l); m < u && !f.eql(b, f.ONE); m++)\n        b = f.sqr(b);\n      const N = f.pow(y, T << BigInt(u - m - 1));\n      y = f.sqr(N), h = f.mul(h, N), l = f.mul(l, y), u = m;\n    }\n    return h;\n  };\n}\nfunction Ze(n) {\n  if (n % kt === ke) {\n    const e = (n + T) / kt;\n    return function(r, o) {\n      const s = r.pow(o, e);\n      if (!r.eql(r.sqr(s), o))\n        throw new Error(\"Cannot find square root\");\n      return s;\n    };\n  }\n  if (n % Pt === Kt) {\n    const e = (n - Kt) / Pt;\n    return function(r, o) {\n      const s = r.mul(o, nt), c = r.pow(s, e), f = r.mul(o, c), i = r.mul(r.mul(f, nt), c), u = r.mul(f, r.sub(i, r.ONE));\n      if (!r.eql(r.sqr(u), o))\n        throw new Error(\"Cannot find square root\");\n      return u;\n    };\n  }\n  return Ce(n);\n}\nconst Re = [\n  \"create\",\n  \"isValid\",\n  \"is0\",\n  \"neg\",\n  \"inv\",\n  \"sqrt\",\n  \"sqr\",\n  \"eql\",\n  \"add\",\n  \"sub\",\n  \"mul\",\n  \"pow\",\n  \"div\",\n  \"addN\",\n  \"subN\",\n  \"mulN\",\n  \"sqrN\"\n];\nfunction Me(n) {\n  const e = {\n    ORDER: \"bigint\",\n    MASK: \"bigint\",\n    BYTES: \"isSafeInteger\",\n    BITS: \"isSafeInteger\"\n  }, t = Re.reduce((r, o) => (r[o] = \"function\", r), e);\n  return mt(n, t);\n}\nfunction Ve(n, e, t) {\n  if (t < z)\n    throw new Error(\"invalid exponent, negatives unsupported\");\n  if (t === z)\n    return n.ONE;\n  if (t === T)\n    return e;\n  let r = n.ONE, o = e;\n  for (; t > z; )\n    t & T && (r = n.mul(r, o)), o = n.sqr(o), t >>= T;\n  return r;\n}\nfunction je(n, e) {\n  const t = new Array(e.length), r = e.reduce((s, c, f) => n.is0(c) ? s : (t[f] = s, n.mul(s, c)), n.ONE), o = n.inv(r);\n  return e.reduceRight((s, c, f) => n.is0(c) ? s : (t[f] = n.mul(s, t[f]), n.mul(s, c)), o), t;\n}\nfunction oe(n, e) {\n  const t = e !== void 0 ? e : n.toString(2).length, r = Math.ceil(t / 8);\n  return { nBitLength: t, nByteLength: r };\n}\nfunction ie(n, e, t = !1, r = {}) {\n  if (n <= z)\n    throw new Error(\"invalid field: expected ORDER > 0, got \" + n);\n  const { nBitLength: o, nByteLength: s } = oe(n, e);\n  if (s > 2048)\n    throw new Error(\"invalid field: expected ORDER of <= 2048 bytes\");\n  let c;\n  const f = Object.freeze({\n    ORDER: n,\n    isLE: t,\n    BITS: o,\n    BYTES: s,\n    MASK: jt(o),\n    ZERO: z,\n    ONE: T,\n    create: (i) => V(i, n),\n    isValid: (i) => {\n      if (typeof i != \"bigint\")\n        throw new Error(\"invalid field element: expected bigint, got \" + typeof i);\n      return z <= i && i < n;\n    },\n    is0: (i) => i === z,\n    isOdd: (i) => (i & T) === T,\n    neg: (i) => V(-i, n),\n    eql: (i, u) => i === u,\n    sqr: (i) => V(i * i, n),\n    add: (i, u) => V(i + u, n),\n    sub: (i, u) => V(i - u, n),\n    mul: (i, u) => V(i * u, n),\n    pow: (i, u) => Ve(f, i, u),\n    div: (i, u) => V(i * zt(u, n), n),\n    // Same as above, but doesn't normalize\n    sqrN: (i) => i * i,\n    addN: (i, u) => i + u,\n    subN: (i, u) => i - u,\n    mulN: (i, u) => i * u,\n    inv: (i) => zt(i, n),\n    sqrt: r.sqrt || ((i) => (c || (c = Ze(n)), c(f, i))),\n    invertBatch: (i) => je(f, i),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (i, u, y) => y ? u : i,\n    toBytes: (i) => t ? Vt(i, s) : ht(i, s),\n    fromBytes: (i) => {\n      if (i.length !== s)\n        throw new Error(\"Field.fromBytes: expected \" + s + \" bytes, got \" + i.length);\n      return t ? Mt(i) : rt(i);\n    }\n  });\n  return Object.freeze(f);\n}\nfunction se(n) {\n  if (typeof n != \"bigint\")\n    throw new Error(\"field order must be bigint\");\n  const e = n.toString(2).length;\n  return Math.ceil(e / 8);\n}\nfunction ce(n) {\n  const e = se(n);\n  return e + Math.ceil(e / 2);\n}\nfunction Ye(n, e, t = !1) {\n  const r = n.length, o = se(e), s = ce(e);\n  if (r < 16 || r < s || r > 1024)\n    throw new Error(\"expected \" + s + \"-1024 bytes of input, got \" + r);\n  const c = t ? Mt(n) : rt(n), f = V(c, e - T) + T;\n  return t ? Vt(f, o) : ht(f, o);\n}\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst Gt = BigInt(0), xt = BigInt(1);\nfunction Lt(n, e) {\n  const t = e.negate();\n  return n ? t : e;\n}\nfunction fe(n, e) {\n  if (!Number.isSafeInteger(n) || n <= 0 || n > e)\n    throw new Error(\"invalid window size, expected [1..\" + e + \"], got W=\" + n);\n}\nfunction Ht(n, e) {\n  fe(n, e);\n  const t = Math.ceil(e / n) + 1, r = 2 ** (n - 1);\n  return { windows: t, windowSize: r };\n}\nfunction Fe(n, e) {\n  if (!Array.isArray(n))\n    throw new Error(\"array expected\");\n  n.forEach((t, r) => {\n    if (!(t instanceof e))\n      throw new Error(\"invalid point at index \" + r);\n  });\n}\nfunction Ke(n, e) {\n  if (!Array.isArray(n))\n    throw new Error(\"array of scalars expected\");\n  n.forEach((t, r) => {\n    if (!e.isValid(t))\n      throw new Error(\"invalid scalar at index \" + r);\n  });\n}\nconst Ut = /* @__PURE__ */ new WeakMap(), ae = /* @__PURE__ */ new WeakMap();\nfunction Tt(n) {\n  return ae.get(n) || 1;\n}\nfunction Pe(n, e) {\n  return {\n    constTimeNegate: Lt,\n    hasPrecomputes(t) {\n      return Tt(t) !== 1;\n    },\n    // non-const time multiplication ladder\n    unsafeLadder(t, r, o = n.ZERO) {\n      let s = t;\n      for (; r > Gt; )\n        r & xt && (o = o.add(s)), s = s.double(), r >>= xt;\n      return o;\n    },\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @param elm Point instance\n     * @param W window size\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(t, r) {\n      const { windows: o, windowSize: s } = Ht(r, e), c = [];\n      let f = t, i = f;\n      for (let u = 0; u < o; u++) {\n        i = f, c.push(i);\n        for (let y = 1; y < s; y++)\n          i = i.add(f), c.push(i);\n        f = i.double();\n      }\n      return c;\n    },\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(t, r, o) {\n      const { windows: s, windowSize: c } = Ht(t, e);\n      let f = n.ZERO, i = n.BASE;\n      const u = BigInt(2 ** t - 1), y = 2 ** t, h = BigInt(t);\n      for (let l = 0; l < s; l++) {\n        const m = l * c;\n        let N = Number(o & u);\n        o >>= h, N > c && (N -= y, o += xt);\n        const b = m, a = m + Math.abs(N) - 1, g = l % 2 !== 0, x = N < 0;\n        N === 0 ? i = i.add(Lt(g, r[b])) : f = f.add(Lt(x, r[a]));\n      }\n      return { p: f, f: i };\n    },\n    /**\n     * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @param acc accumulator point to add result of multiplication\n     * @returns point\n     */\n    wNAFUnsafe(t, r, o, s = n.ZERO) {\n      const { windows: c, windowSize: f } = Ht(t, e), i = BigInt(2 ** t - 1), u = 2 ** t, y = BigInt(t);\n      for (let h = 0; h < c; h++) {\n        const l = h * f;\n        if (o === Gt)\n          break;\n        let m = Number(o & i);\n        if (o >>= y, m > f && (m -= u, o += xt), m === 0)\n          continue;\n        let N = r[l + Math.abs(m) - 1];\n        m < 0 && (N = N.negate()), s = s.add(N);\n      }\n      return s;\n    },\n    getPrecomputes(t, r, o) {\n      let s = Ut.get(r);\n      return s || (s = this.precomputeWindow(r, t), t !== 1 && Ut.set(r, o(s))), s;\n    },\n    wNAFCached(t, r, o) {\n      const s = Tt(t);\n      return this.wNAF(s, this.getPrecomputes(s, t, o), r);\n    },\n    wNAFCachedUnsafe(t, r, o, s) {\n      const c = Tt(t);\n      return c === 1 ? this.unsafeLadder(t, r, s) : this.wNAFUnsafe(c, this.getPrecomputes(c, t, o), r, s);\n    },\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    setWindowSize(t, r) {\n      fe(r, e), ae.set(t, r), Ut.delete(t);\n    }\n  };\n}\nfunction Ge(n, e, t, r) {\n  if (Fe(t, n), Ke(r, e), t.length !== r.length)\n    throw new Error(\"arrays of points and scalars must have equal length\");\n  const o = n.ZERO, s = te(BigInt(t.length)), c = s > 12 ? s - 3 : s > 4 ? s - 2 : s ? 2 : 1, f = (1 << c) - 1, i = new Array(f + 1).fill(o), u = Math.floor((e.BITS - 1) / c) * c;\n  let y = o;\n  for (let h = u; h >= 0; h -= c) {\n    i.fill(o);\n    for (let m = 0; m < r.length; m++) {\n      const N = r[m], b = Number(N >> BigInt(h) & BigInt(f));\n      i[b] = i[b].add(t[m]);\n    }\n    let l = o;\n    for (let m = i.length - 1, N = o; m > 0; m--)\n      N = N.add(i[m]), l = l.add(N);\n    if (y = y.add(l), h !== 0)\n      for (let m = 0; m < c; m++)\n        y = y.double();\n  }\n  return y;\n}\nfunction ue(n) {\n  return Me(n.Fp), mt(n, {\n    n: \"bigint\",\n    h: \"bigint\",\n    Gx: \"field\",\n    Gy: \"field\"\n  }, {\n    nBitLength: \"isSafeInteger\",\n    nByteLength: \"isSafeInteger\"\n  }), Object.freeze({\n    ...oe(n.n, n.nBitLength),\n    ...n,\n    p: n.Fp.ORDER\n  });\n}\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nfunction Dt(n) {\n  n.lowS !== void 0 && ut(\"lowS\", n.lowS), n.prehash !== void 0 && ut(\"prehash\", n.prehash);\n}\nfunction De(n) {\n  const e = ue(n);\n  mt(e, {\n    a: \"field\",\n    b: \"field\"\n  }, {\n    allowedPrivateKeyLengths: \"array\",\n    wrapPrivateKey: \"boolean\",\n    isTorsionFree: \"function\",\n    clearCofactor: \"function\",\n    allowInfinityPoint: \"boolean\",\n    fromBytes: \"function\",\n    toBytes: \"function\"\n  });\n  const { endo: t, Fp: r, a: o } = e;\n  if (t) {\n    if (!r.eql(o, r.ZERO))\n      throw new Error(\"invalid endomorphism, can only be defined for Koblitz curves that have a=0\");\n    if (typeof t != \"object\" || typeof t.beta != \"bigint\" || typeof t.splitScalar != \"function\")\n      throw new Error(\"invalid endomorphism, expected beta: bigint and splitScalar: function\");\n  }\n  return Object.freeze({ ...e });\n}\nconst { bytesToNumberBE: $e, hexToBytes: We } = _e;\nclass Xe extends Error {\n  constructor(e = \"\") {\n    super(e);\n  }\n}\nconst $ = {\n  // asn.1 DER encoding utils\n  Err: Xe,\n  // Basic building block is TLV (Tag-Length-Value)\n  _tlv: {\n    encode: (n, e) => {\n      const { Err: t } = $;\n      if (n < 0 || n > 256)\n        throw new t(\"tlv.encode: wrong tag\");\n      if (e.length & 1)\n        throw new t(\"tlv.encode: unpadded data\");\n      const r = e.length / 2, o = at(r);\n      if (o.length / 2 & 128)\n        throw new t(\"tlv.encode: long form length too big\");\n      const s = r > 127 ? at(o.length / 2 | 128) : \"\";\n      return at(n) + s + o + e;\n    },\n    // v - value, l - left bytes (unparsed)\n    decode(n, e) {\n      const { Err: t } = $;\n      let r = 0;\n      if (n < 0 || n > 256)\n        throw new t(\"tlv.encode: wrong tag\");\n      if (e.length < 2 || e[r++] !== n)\n        throw new t(\"tlv.decode: wrong tlv\");\n      const o = e[r++], s = !!(o & 128);\n      let c = 0;\n      if (!s)\n        c = o;\n      else {\n        const i = o & 127;\n        if (!i)\n          throw new t(\"tlv.decode(long): indefinite length not supported\");\n        if (i > 4)\n          throw new t(\"tlv.decode(long): byte length is too big\");\n        const u = e.subarray(r, r + i);\n        if (u.length !== i)\n          throw new t(\"tlv.decode: length bytes not complete\");\n        if (u[0] === 0)\n          throw new t(\"tlv.decode(long): zero leftmost byte\");\n        for (const y of u)\n          c = c << 8 | y;\n        if (r += i, c < 128)\n          throw new t(\"tlv.decode(long): not minimal encoding\");\n      }\n      const f = e.subarray(r, r + c);\n      if (f.length !== c)\n        throw new t(\"tlv.decode: wrong value length\");\n      return { v: f, l: e.subarray(r + c) };\n    }\n  },\n  // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n  // since we always use positive integers here. It must always be empty:\n  // - add zero byte if exists\n  // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n  _int: {\n    encode(n) {\n      const { Err: e } = $;\n      if (n < W)\n        throw new e(\"integer: negative integers are not allowed\");\n      let t = at(n);\n      if (Number.parseInt(t[0], 16) & 8 && (t = \"00\" + t), t.length & 1)\n        throw new e(\"unexpected DER parsing assertion: unpadded hex\");\n      return t;\n    },\n    decode(n) {\n      const { Err: e } = $;\n      if (n[0] & 128)\n        throw new e(\"invalid signature integer: negative\");\n      if (n[0] === 0 && !(n[1] & 128))\n        throw new e(\"invalid signature integer: unnecessary leading zero\");\n      return $e(n);\n    }\n  },\n  toSig(n) {\n    const { Err: e, _int: t, _tlv: r } = $, o = typeof n == \"string\" ? We(n) : n;\n    yt(o);\n    const { v: s, l: c } = r.decode(48, o);\n    if (c.length)\n      throw new e(\"invalid signature: left bytes after parsing\");\n    const { v: f, l: i } = r.decode(2, s), { v: u, l: y } = r.decode(2, i);\n    if (y.length)\n      throw new e(\"invalid signature: left bytes after parsing\");\n    return { r: t.decode(f), s: t.decode(u) };\n  },\n  hexFromSig(n) {\n    const { _tlv: e, _int: t } = $, r = e.encode(2, t.encode(n.r)), o = e.encode(2, t.encode(n.s)), s = r + o;\n    return e.encode(48, s);\n  }\n}, W = BigInt(0), k = BigInt(1);\nBigInt(2);\nconst $t = BigInt(3);\nBigInt(4);\nfunction Qe(n) {\n  const e = De(n), { Fp: t } = e, r = ie(e.n, e.nBitLength), o = e.toBytes || ((b, a, g) => {\n    const x = a.toAffine();\n    return bt(Uint8Array.from([4]), t.toBytes(x.x), t.toBytes(x.y));\n  }), s = e.fromBytes || ((b) => {\n    const a = b.subarray(1), g = t.fromBytes(a.subarray(0, t.BYTES)), x = t.fromBytes(a.subarray(t.BYTES, 2 * t.BYTES));\n    return { x: g, y: x };\n  });\n  function c(b) {\n    const { a, b: g } = e, x = t.sqr(b), E = t.mul(x, b);\n    return t.add(t.add(E, t.mul(b, a)), g);\n  }\n  if (!t.eql(t.sqr(e.Gy), c(e.Gx)))\n    throw new Error(\"bad generator point: equation left != right\");\n  function f(b) {\n    return St(b, k, e.n);\n  }\n  function i(b) {\n    const { allowedPrivateKeyLengths: a, nByteLength: g, wrapPrivateKey: x, n: E } = e;\n    if (a && typeof b != \"bigint\") {\n      if (it(b) && (b = lt(b)), typeof b != \"string\" || !a.includes(b.length))\n        throw new Error(\"invalid private key\");\n      b = b.padStart(g * 2, \"0\");\n    }\n    let q;\n    try {\n      q = typeof b == \"bigint\" ? b : rt(K(\"private key\", b, g));\n    } catch {\n      throw new Error(\"invalid private key, expected hex or \" + g + \" bytes, got \" + typeof b);\n    }\n    return x && (q = V(q, E)), ot(\"private key\", q, k, E), q;\n  }\n  function u(b) {\n    if (!(b instanceof l))\n      throw new Error(\"ProjectivePoint expected\");\n  }\n  const y = _t((b, a) => {\n    const { px: g, py: x, pz: E } = b;\n    if (t.eql(E, t.ONE))\n      return { x: g, y: x };\n    const q = b.is0();\n    a == null && (a = q ? t.ONE : t.inv(E));\n    const L = t.mul(g, a), I = t.mul(x, a), B = t.mul(E, a);\n    if (q)\n      return { x: t.ZERO, y: t.ZERO };\n    if (!t.eql(B, t.ONE))\n      throw new Error(\"invZ was invalid\");\n    return { x: L, y: I };\n  }), h = _t((b) => {\n    if (b.is0()) {\n      if (e.allowInfinityPoint && !t.is0(b.py))\n        return;\n      throw new Error(\"bad point: ZERO\");\n    }\n    const { x: a, y: g } = b.toAffine();\n    if (!t.isValid(a) || !t.isValid(g))\n      throw new Error(\"bad point: x or y not FE\");\n    const x = t.sqr(g), E = c(a);\n    if (!t.eql(x, E))\n      throw new Error(\"bad point: equation left != right\");\n    if (!b.isTorsionFree())\n      throw new Error(\"bad point: not in prime-order subgroup\");\n    return !0;\n  });\n  class l {\n    constructor(a, g, x) {\n      if (this.px = a, this.py = g, this.pz = x, a == null || !t.isValid(a))\n        throw new Error(\"x required\");\n      if (g == null || !t.isValid(g))\n        throw new Error(\"y required\");\n      if (x == null || !t.isValid(x))\n        throw new Error(\"z required\");\n      Object.freeze(this);\n    }\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(a) {\n      const { x: g, y: x } = a || {};\n      if (!a || !t.isValid(g) || !t.isValid(x))\n        throw new Error(\"invalid affine point\");\n      if (a instanceof l)\n        throw new Error(\"projective point not allowed\");\n      const E = (q) => t.eql(q, t.ZERO);\n      return E(g) && E(x) ? l.ZERO : new l(g, x, t.ONE);\n    }\n    get x() {\n      return this.toAffine().x;\n    }\n    get y() {\n      return this.toAffine().y;\n    }\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(a) {\n      const g = t.invertBatch(a.map((x) => x.pz));\n      return a.map((x, E) => x.toAffine(g[E])).map(l.fromAffine);\n    }\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(a) {\n      const g = l.fromAffine(s(K(\"pointHex\", a)));\n      return g.assertValidity(), g;\n    }\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(a) {\n      return l.BASE.multiply(i(a));\n    }\n    // Multiscalar Multiplication\n    static msm(a, g) {\n      return Ge(l, r, a, g);\n    }\n    // \"Private method\", don't use it directly\n    _setWindowSize(a) {\n      N.setWindowSize(this, a);\n    }\n    // A point on curve is valid if it conforms to equation.\n    assertValidity() {\n      h(this);\n    }\n    hasEvenY() {\n      const { y: a } = this.toAffine();\n      if (t.isOdd)\n        return !t.isOdd(a);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n    /**\n     * Compare one point to another.\n     */\n    equals(a) {\n      u(a);\n      const { px: g, py: x, pz: E } = this, { px: q, py: L, pz: I } = a, B = t.eql(t.mul(g, I), t.mul(q, E)), A = t.eql(t.mul(x, I), t.mul(L, E));\n      return B && A;\n    }\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate() {\n      return new l(this.px, t.neg(this.py), this.pz);\n    }\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b: g } = e, x = t.mul(g, $t), { px: E, py: q, pz: L } = this;\n      let I = t.ZERO, B = t.ZERO, A = t.ZERO, v = t.mul(E, E), C = t.mul(q, q), U = t.mul(L, L), H = t.mul(E, q);\n      return H = t.add(H, H), A = t.mul(E, L), A = t.add(A, A), I = t.mul(a, A), B = t.mul(x, U), B = t.add(I, B), I = t.sub(C, B), B = t.add(C, B), B = t.mul(I, B), I = t.mul(H, I), A = t.mul(x, A), U = t.mul(a, U), H = t.sub(v, U), H = t.mul(a, H), H = t.add(H, A), A = t.add(v, v), v = t.add(A, v), v = t.add(v, U), v = t.mul(v, H), B = t.add(B, v), U = t.mul(q, L), U = t.add(U, U), v = t.mul(U, H), I = t.sub(I, v), A = t.mul(U, C), A = t.add(A, A), A = t.add(A, A), new l(I, B, A);\n    }\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(a) {\n      u(a);\n      const { px: g, py: x, pz: E } = this, { px: q, py: L, pz: I } = a;\n      let B = t.ZERO, A = t.ZERO, v = t.ZERO;\n      const C = e.a, U = t.mul(e.b, $t);\n      let H = t.mul(g, q), j = t.mul(x, L), d = t.mul(E, I), w = t.add(g, x), p = t.add(q, L);\n      w = t.mul(w, p), p = t.add(H, j), w = t.sub(w, p), p = t.add(g, E);\n      let S = t.add(q, I);\n      return p = t.mul(p, S), S = t.add(H, d), p = t.sub(p, S), S = t.add(x, E), B = t.add(L, I), S = t.mul(S, B), B = t.add(j, d), S = t.sub(S, B), v = t.mul(C, p), B = t.mul(U, d), v = t.add(B, v), B = t.sub(j, v), v = t.add(j, v), A = t.mul(B, v), j = t.add(H, H), j = t.add(j, H), d = t.mul(C, d), p = t.mul(U, p), j = t.add(j, d), d = t.sub(H, d), d = t.mul(C, d), p = t.add(p, d), H = t.mul(j, p), A = t.add(A, H), H = t.mul(S, p), B = t.mul(w, B), B = t.sub(B, H), H = t.mul(w, j), v = t.mul(S, v), v = t.add(v, H), new l(B, A, v);\n    }\n    subtract(a) {\n      return this.add(a.negate());\n    }\n    is0() {\n      return this.equals(l.ZERO);\n    }\n    wNAF(a) {\n      return N.wNAFCached(this, a, l.normalizeZ);\n    }\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(a) {\n      const { endo: g, n: x } = e;\n      ot(\"scalar\", a, W, x);\n      const E = l.ZERO;\n      if (a === W)\n        return E;\n      if (this.is0() || a === k)\n        return this;\n      if (!g || N.hasPrecomputes(this))\n        return N.wNAFCachedUnsafe(this, a, l.normalizeZ);\n      let { k1neg: q, k1: L, k2neg: I, k2: B } = g.splitScalar(a), A = E, v = E, C = this;\n      for (; L > W || B > W; )\n        L & k && (A = A.add(C)), B & k && (v = v.add(C)), C = C.double(), L >>= k, B >>= k;\n      return q && (A = A.negate()), I && (v = v.negate()), v = new l(t.mul(v.px, g.beta), v.py, v.pz), A.add(v);\n    }\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(a) {\n      const { endo: g, n: x } = e;\n      ot(\"scalar\", a, k, x);\n      let E, q;\n      if (g) {\n        const { k1neg: L, k1: I, k2neg: B, k2: A } = g.splitScalar(a);\n        let { p: v, f: C } = this.wNAF(I), { p: U, f: H } = this.wNAF(A);\n        v = N.constTimeNegate(L, v), U = N.constTimeNegate(B, U), U = new l(t.mul(U.px, g.beta), U.py, U.pz), E = v.add(U), q = C.add(H);\n      } else {\n        const { p: L, f: I } = this.wNAF(a);\n        E = L, q = I;\n      }\n      return l.normalizeZ([E, q])[0];\n    }\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(a, g, x) {\n      const E = l.BASE, q = (I, B) => B === W || B === k || !I.equals(E) ? I.multiplyUnsafe(B) : I.multiply(B), L = q(this, g).add(q(a, x));\n      return L.is0() ? void 0 : L;\n    }\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(a) {\n      return y(this, a);\n    }\n    isTorsionFree() {\n      const { h: a, isTorsionFree: g } = e;\n      if (a === k)\n        return !0;\n      if (g)\n        return g(l, this);\n      throw new Error(\"isTorsionFree() has not been declared for the elliptic curve\");\n    }\n    clearCofactor() {\n      const { h: a, clearCofactor: g } = e;\n      return a === k ? this : g ? g(l, this) : this.multiplyUnsafe(e.h);\n    }\n    toRawBytes(a = !0) {\n      return ut(\"isCompressed\", a), this.assertValidity(), o(l, this, a);\n    }\n    toHex(a = !0) {\n      return ut(\"isCompressed\", a), lt(this.toRawBytes(a));\n    }\n  }\n  l.BASE = new l(e.Gx, e.Gy, t.ONE), l.ZERO = new l(t.ZERO, t.ONE, t.ZERO);\n  const m = e.nBitLength, N = Pe(l, e.endo ? Math.ceil(m / 2) : m);\n  return {\n    CURVE: e,\n    ProjectivePoint: l,\n    normPrivateKeyToScalar: i,\n    weierstrassEquation: c,\n    isWithinCurveOrder: f\n  };\n}\nfunction Je(n) {\n  const e = ue(n);\n  return mt(e, {\n    hash: \"hash\",\n    hmac: \"function\",\n    randomBytes: \"function\"\n  }, {\n    bits2int: \"function\",\n    bits2int_modN: \"function\",\n    lowS: \"boolean\"\n  }), Object.freeze({ lowS: !0, ...e });\n}\nfunction tn(n) {\n  const e = Je(n), { Fp: t, n: r } = e, o = t.BYTES + 1, s = 2 * t.BYTES + 1;\n  function c(d) {\n    return V(d, r);\n  }\n  function f(d) {\n    return zt(d, r);\n  }\n  const { ProjectivePoint: i, normPrivateKeyToScalar: u, weierstrassEquation: y, isWithinCurveOrder: h } = Qe({\n    ...e,\n    toBytes(d, w, p) {\n      const S = w.toAffine(), O = t.toBytes(S.x), _ = bt;\n      return ut(\"isCompressed\", p), p ? _(Uint8Array.from([w.hasEvenY() ? 2 : 3]), O) : _(Uint8Array.from([4]), O, t.toBytes(S.y));\n    },\n    fromBytes(d) {\n      const w = d.length, p = d[0], S = d.subarray(1);\n      if (w === o && (p === 2 || p === 3)) {\n        const O = rt(S);\n        if (!St(O, k, t.ORDER))\n          throw new Error(\"Point is not on curve\");\n        const _ = y(O);\n        let R;\n        try {\n          R = t.sqrt(_);\n        } catch (F) {\n          const M = F instanceof Error ? \": \" + F.message : \"\";\n          throw new Error(\"Point is not on curve\" + M);\n        }\n        const Z = (R & k) === k;\n        return (p & 1) === 1 !== Z && (R = t.neg(R)), { x: O, y: R };\n      } else if (w === s && p === 4) {\n        const O = t.fromBytes(S.subarray(0, t.BYTES)), _ = t.fromBytes(S.subarray(t.BYTES, 2 * t.BYTES));\n        return { x: O, y: _ };\n      } else {\n        const O = o, _ = s;\n        throw new Error(\"invalid Point, expected length of \" + O + \", or uncompressed \" + _ + \", got \" + w);\n      }\n    }\n  }), l = (d) => lt(ht(d, e.nByteLength));\n  function m(d) {\n    const w = r >> k;\n    return d > w;\n  }\n  function N(d) {\n    return m(d) ? c(-d) : d;\n  }\n  const b = (d, w, p) => rt(d.slice(w, p));\n  class a {\n    constructor(w, p, S) {\n      this.r = w, this.s = p, this.recovery = S, this.assertValidity();\n    }\n    // pair (bytes of r, bytes of s)\n    static fromCompact(w) {\n      const p = e.nByteLength;\n      return w = K(\"compactSignature\", w, p * 2), new a(b(w, 0, p), b(w, p, 2 * p));\n    }\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(w) {\n      const { r: p, s: S } = $.toSig(K(\"DER\", w));\n      return new a(p, S);\n    }\n    assertValidity() {\n      ot(\"r\", this.r, k, r), ot(\"s\", this.s, k, r);\n    }\n    addRecoveryBit(w) {\n      return new a(this.r, this.s, w);\n    }\n    recoverPublicKey(w) {\n      const { r: p, s: S, recovery: O } = this, _ = I(K(\"msgHash\", w));\n      if (O == null || ![0, 1, 2, 3].includes(O))\n        throw new Error(\"recovery id invalid\");\n      const R = O === 2 || O === 3 ? p + e.n : p;\n      if (R >= t.ORDER)\n        throw new Error(\"recovery id 2 or 3 invalid\");\n      const Z = O & 1 ? \"03\" : \"02\", G = i.fromHex(Z + l(R)), F = f(R), M = c(-_ * F), st = c(S * F), X = i.BASE.multiplyAndAddUnsafe(G, M, st);\n      if (!X)\n        throw new Error(\"point at infinify\");\n      return X.assertValidity(), X;\n    }\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS() {\n      return m(this.s);\n    }\n    normalizeS() {\n      return this.hasHighS() ? new a(this.r, c(-this.s), this.recovery) : this;\n    }\n    // DER-encoded\n    toDERRawBytes() {\n      return dt(this.toDERHex());\n    }\n    toDERHex() {\n      return $.hexFromSig({ r: this.r, s: this.s });\n    }\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return dt(this.toCompactHex());\n    }\n    toCompactHex() {\n      return l(this.r) + l(this.s);\n    }\n  }\n  const g = {\n    isValidPrivateKey(d) {\n      try {\n        return u(d), !0;\n      } catch {\n        return !1;\n      }\n    },\n    normPrivateKeyToScalar: u,\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: () => {\n      const d = ce(e.n);\n      return Ye(e.randomBytes(d), e.n);\n    },\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(d = 8, w = i.BASE) {\n      return w._setWindowSize(d), w.multiply(BigInt(3)), w;\n    }\n  };\n  function x(d, w = !0) {\n    return i.fromPrivateKey(d).toRawBytes(w);\n  }\n  function E(d) {\n    const w = it(d), p = typeof d == \"string\", S = (w || p) && d.length;\n    return w ? S === o || S === s : p ? S === 2 * o || S === 2 * s : d instanceof i;\n  }\n  function q(d, w, p = !0) {\n    if (E(d))\n      throw new Error(\"first arg must be private key\");\n    if (!E(w))\n      throw new Error(\"second arg must be public key\");\n    return i.fromHex(w).multiply(u(d)).toRawBytes(p);\n  }\n  const L = e.bits2int || function(d) {\n    if (d.length > 8192)\n      throw new Error(\"input is too large\");\n    const w = rt(d), p = d.length * 8 - e.nBitLength;\n    return p > 0 ? w >> BigInt(p) : w;\n  }, I = e.bits2int_modN || function(d) {\n    return c(L(d));\n  }, B = jt(e.nBitLength);\n  function A(d) {\n    return ot(\"num < 2^\" + e.nBitLength, d, W, B), ht(d, e.nByteLength);\n  }\n  function v(d, w, p = C) {\n    if ([\"recovered\", \"canonical\"].some((tt) => tt in p))\n      throw new Error(\"sign() legacy options not supported\");\n    const { hash: S, randomBytes: O } = e;\n    let { lowS: _, prehash: R, extraEntropy: Z } = p;\n    _ == null && (_ = !0), d = K(\"msgHash\", d), Dt(p), R && (d = K(\"prehashed msgHash\", S(d)));\n    const G = I(d), F = u(w), M = [A(F), A(G)];\n    if (Z != null && Z !== !1) {\n      const tt = Z === !0 ? O(t.BYTES) : Z;\n      M.push(K(\"extraEntropy\", tt));\n    }\n    const st = bt(...M), X = G;\n    function At(tt) {\n      const ct = L(tt);\n      if (!h(ct))\n        return;\n      const It = f(ct), gt = i.BASE.multiply(ct).toAffine(), et = c(gt.x);\n      if (et === W)\n        return;\n      const wt = c(It * c(X + et * F));\n      if (wt === W)\n        return;\n      let pt = (gt.x === et ? 0 : 2) | Number(gt.y & k), ft = wt;\n      return _ && m(wt) && (ft = N(wt), pt ^= 1), new a(et, ft, pt);\n    }\n    return { seed: st, k2sig: At };\n  }\n  const C = { lowS: e.lowS, prehash: !1 }, U = { lowS: e.lowS, prehash: !1 };\n  function H(d, w, p = C) {\n    const { seed: S, k2sig: O } = v(d, w, p), _ = e;\n    return ee(_.hash.outputLen, _.nByteLength, _.hmac)(S, O);\n  }\n  i.BASE._setWindowSize(8);\n  function j(d, w, p, S = U) {\n    var pt;\n    const O = d;\n    w = K(\"msgHash\", w), p = K(\"publicKey\", p);\n    const { lowS: _, prehash: R, format: Z } = S;\n    if (Dt(S), \"strict\" in S)\n      throw new Error(\"options.strict was renamed to lowS\");\n    if (Z !== void 0 && Z !== \"compact\" && Z !== \"der\")\n      throw new Error(\"format must be compact or der\");\n    const G = typeof O == \"string\" || it(O), F = !G && !Z && typeof O == \"object\" && O !== null && typeof O.r == \"bigint\" && typeof O.s == \"bigint\";\n    if (!G && !F)\n      throw new Error(\"invalid signature, expected Uint8Array, hex string or Signature instance\");\n    let M, st;\n    try {\n      if (F && (M = new a(O.r, O.s)), G) {\n        try {\n          Z !== \"compact\" && (M = a.fromDER(O));\n        } catch (ft) {\n          if (!(ft instanceof $.Err))\n            throw ft;\n        }\n        !M && Z !== \"der\" && (M = a.fromCompact(O));\n      }\n      st = i.fromHex(p);\n    } catch {\n      return !1;\n    }\n    if (!M || _ && M.hasHighS())\n      return !1;\n    R && (w = e.hash(w));\n    const { r: X, s: At } = M, tt = I(w), ct = f(At), It = c(tt * ct), gt = c(X * ct), et = (pt = i.BASE.multiplyAndAddUnsafe(st, It, gt)) == null ? void 0 : pt.toAffine();\n    return et ? c(et.x) === X : !1;\n  }\n  return {\n    CURVE: e,\n    getPublicKey: x,\n    getSharedSecret: q,\n    sign: H,\n    verify: j,\n    ProjectivePoint: i,\n    Signature: a,\n    utils: g\n  };\n}\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nfunction en(n) {\n  return {\n    hash: n,\n    hmac: (e, ...t) => re(n, e, be(...t)),\n    randomBytes: pe\n  };\n}\nfunction nn(n, e) {\n  const t = (r) => tn({ ...n, ...en(r) });\n  return { ...t(e), create: t };\n}\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst le = BigInt(\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\"), Wt = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\"), rn = BigInt(1), Ct = BigInt(2), Xt = (n, e) => (n + e / Ct) / e;\nfunction on(n) {\n  const e = le, t = BigInt(3), r = BigInt(6), o = BigInt(11), s = BigInt(22), c = BigInt(23), f = BigInt(44), i = BigInt(88), u = n * n * n % e, y = u * u * n % e, h = Y(y, t, e) * y % e, l = Y(h, t, e) * y % e, m = Y(l, Ct, e) * u % e, N = Y(m, o, e) * m % e, b = Y(N, s, e) * N % e, a = Y(b, f, e) * b % e, g = Y(a, i, e) * a % e, x = Y(g, f, e) * b % e, E = Y(x, t, e) * y % e, q = Y(E, c, e) * N % e, L = Y(q, r, e) * u % e, I = Y(L, Ct, e);\n  if (!Zt.eql(Zt.sqr(I), n))\n    throw new Error(\"Cannot find square root\");\n  return I;\n}\nconst Zt = ie(le, void 0, void 0, { sqrt: on }), sn = nn({\n  a: BigInt(0),\n  // equation params: a, b\n  b: BigInt(7),\n  Fp: Zt,\n  // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n  n: Wt,\n  // Curve order, total count of valid points in the field\n  // Base point (x, y) aka generator point\n  Gx: BigInt(\"55066263022277343669578718895168534326250603453777594175500187360389116729240\"),\n  Gy: BigInt(\"32670510020758816978083085130507043184471273380659243275938904335757337482424\"),\n  h: BigInt(1),\n  // Cofactor\n  lowS: !0,\n  // Allow only low-S signatures by default in sign() and verify()\n  endo: {\n    // Endomorphism, see above\n    beta: BigInt(\"0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\"),\n    splitScalar: (n) => {\n      const e = Wt, t = BigInt(\"0x3086d221a7d46bcde86c90e49284eb15\"), r = -rn * BigInt(\"0xe4437ed6010e88286f547fa90abfe4c3\"), o = BigInt(\"0x114ca50f7a8e2f3f657c1108d9d44cfd8\"), s = t, c = BigInt(\"0x100000000000000000000000000000000\"), f = Xt(s * n, e), i = Xt(-r * n, e);\n      let u = V(n - f * t - i * o, e), y = V(-f * r - i * s, e);\n      const h = u > c, l = y > c;\n      if (h && (u = e - u), l && (y = e - y), u > c || y > c)\n        throw new Error(\"splitScalar: Endomorphism failed, k=\" + n);\n      return { k1neg: h, k1: u, k2neg: l, k2: y };\n    }\n  }\n}, Se);\nBigInt(0);\nsn.ProjectivePoint;\nexport {\n  sn as secp256k1\n};\n"],"names":["me","n","e","t","xe","Ee","Qt","constructor","r","o","super","this","blockLen","outputLen","padOffset","isLE","finished","length","pos","destroyed","buffer","Uint8Array","view","Nt","update","Et","s","Jt","c","f","Math","min","i","process","set","subarray","roundClean","digestInto","de","fill","h","setBigUint64","BigInt","Number","u","setUint32","ye","Error","y","get","digest","slice","destroy","_cloneInto","Be","Uint32Array","Q","J","ve","A","B","C","D","E","F","G","H","getUint32","l","m","N","P","b","Se","he","Bt","vt","Ae","it","ArrayBuffer","isView","name","yt","ut","Ie","Array","from","toString","padStart","lt","at","Rt","Yt","dt","charCodeAt","rt","Mt","reverse","ht","Vt","K","bt","arguments","undefined","qt","St","ot","te","jt","Ot","Ft","ee","_len","_key","push","Ue","bigint","function","boolean","string","stringOrUint8Array","isSafeInteger","array","isArray","field","Fp","isValid","hash","mt","String","Object","entries","_t","WeakMap","_len2","_key2","_e","freeze","defineProperty","__proto__","aInRange","abool","abytes","bitGet","bitLen","bitMask","bitSet","bytesToHex","bytesToNumberBE","bytesToNumberLE","concatBytes","createHmacDrbg","ensureBytes","equalBytes","hexToBytes","hexToNumber","inRange","isBytes","memoized","notImplemented","Te","numberToBytesBE","numberToBytesLE","numberToHexUnpadded","numberToVarBytesBE","utf8ToBytes","TextEncoder","encode","validateObject","Symbol","toStringTag","value","ne","ge","iHash","create","oHash","we","getPrototypeOf","re","z","T","nt","ke","kt","Kt","Pt","V","ze","Y","zt","Ze","pow","eql","sqr","mul","sub","ONE","neg","ZERO","Ce","Re","oe","nBitLength","nByteLength","ceil","ie","ORDER","BITS","BYTES","MASK","is0","isOdd","add","Ve","div","sqrN","addN","subN","mulN","inv","sqrt","invertBatch","reduce","reduceRight","je","cmov","toBytes","fromBytes","se","ce","Gt","xt","Lt","negate","fe","Ht","windows","windowSize","Ut","ae","Tt","Ge","forEach","Fe","Ke","floor","double","ue","Me","Gx","Gy","_objectSpread","p","Dt","lowS","prehash","$e","We","Xe","$","Err","_tlv","decode","v","_int","W","parseInt","toSig","hexFromSig","k","$t","Qe","a","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","clearCofactor","allowInfinityPoint","endo","beta","splitScalar","De","g","x","toAffine","includes","q","_unused","px","py","pz","L","I","fromAffine","normalizeZ","map","fromHex","assertValidity","fromPrivateKey","BASE","multiply","msm","_setWindowSize","setWindowSize","hasEvenY","equals","U","j","d","w","S","subtract","wNAF","wNAFCached","multiplyUnsafe","hasPrecomputes","wNAFCachedUnsafe","k1neg","k1","k2neg","k2","constTimeNegate","multiplyAndAddUnsafe","toRawBytes","toHex","unsafeLadder","precomputeWindow","abs","wNAFUnsafe","getPrecomputes","delete","Pe","CURVE","ProjectivePoint","normPrivateKeyToScalar","weierstrassEquation","isWithinCurveOrder","tn","hmac","randomBytes","bits2int","bits2int_modN","Je","O","_","R","M","message","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","Z","st","X","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","_unused2","randomPrivateKey","Ye","precompute","some","tt","extraEntropy","seed","k2sig","ct","It","gt","et","wt","pt","ft","getPublicKey","getSharedSecret","sign","verify","format","_unused3","At","Signature","utils","le","Wt","rn","Ct","Xt","Zt","sn","_len3","_key3","be","pe","en","nn"],"sourceRoot":""}