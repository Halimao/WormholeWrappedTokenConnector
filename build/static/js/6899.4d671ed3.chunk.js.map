{"version":3,"file":"static/js/6899.4d671ed3.chunk.js","mappings":"wLAGA,MAAMA,EAAI,CACRC,QAASC,EAAAA,GACTC,SAAUC,EAAAA,EACVC,UAAWC,EAAAA,EACXC,UAAW,CACTC,aAAcA,IAAM,uDAA+BC,KAAMC,GAAMA,EAAEC,GACjEC,YAAaA,IAAM,iEACnBC,aAAcA,IAAM,uDACpBC,WAAYA,IAAM,0EAEpBC,SAAUA,CAACL,EAAGM,EAAGC,IAAM,IAAIC,EAAAA,EAAEF,EAAG,IAAIZ,EAAAA,EAAEM,GAAGS,EAAAA,EAAAA,IAAET,EAAGU,EAAAA,GAAG,CAAE,CAACJ,GAAIC,M","sources":["../node_modules/@wormhole-foundation/wormhole-connect/lib/solana-CEz8hIFa.mjs"],"sourcesContent":["import { b as i, a } from \"./unsignedTransaction-DkC9OIgh.mjs\";\nimport { g as n } from \"./signer-CinqaaXD.mjs\";\nimport { b1 as t, bD as s, b3 as m } from \"./address-BkeBsCZD.mjs\";\nconst d = {\n  Address: t,\n  Platform: a,\n  getSigner: n,\n  protocols: {\n    WormholeCore: () => import(\"./index-Bv-BZXf_.mjs\").then((o) => o.p),\n    TokenBridge: () => import(\"./index-B1YHtJKf.mjs\"),\n    CircleBridge: () => import(\"./index-B2v8cGyE.mjs\"),\n    TBTCBridge: () => import(\"./index-DSGGuRHs.mjs\")\n  },\n  getChain: (o, r, e) => new i(r, new a(o, s(o, m, { [r]: e })))\n};\nexport {\n  d as default\n};\n"],"names":["d","Address","t","Platform","a","getSigner","n","protocols","WormholeCore","then","o","p","TokenBridge","CircleBridge","TBTCBridge","getChain","r","e","i","s","m"],"sourceRoot":""}