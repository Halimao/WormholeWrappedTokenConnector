"use strict";(self.webpackChunkwormhole_connector=self.webpackChunkwormhole_connector||[]).push([[1388],{1388:(e,t,r)=>{r.r(t),r.d(t,{SuiCircleBridge:()=>g,_suiCircleObjects:()=>m,suiCircleObjects:()=>h});var s=r(6218),n=r(600),a=r(6391),o=r(7547),c=r(1394),i=r(9801),d=Object.defineProperty,u=(e,t,r)=>((e,t,r)=>t in e?d(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r)(e,"symbol"!=typeof t?t+"":t,r);const m=[["Testnet",{tokenMessengerState:"0x5252abd1137094ed1db3e0d75bc36abcd287aee4bc310f8e047727ef5682e7c2",messageTransmitterState:"0x98234bd0fa9ac12cc0a20a144a22e36d6a32f7e0a97baaeaf9c76cdc6d122d2e",usdcTreasury:"0x7170137d4a6431bf83351ac025baf462909bffe2877d87716374fb42b9629ebe"}],["Mainnet",{tokenMessengerState:"0x45993eecc0382f37419864992c12faee2238f5cfe22b98ad3bf455baf65c8a2f",messageTransmitterState:"0xf68268c3d9b1df3215f2439400c1c4ea08ac4ef4bb7d6f3ca6a2a239e17510af",usdcTreasury:"0x57d6725e7a8b49a7b2a612f6bd66ab5f39fc95332ca48be421c3229d514a6de7"}]],h=(0,o.a1)(m,[0,1]);class g{constructor(e,t,r,s){var n,a,c,i;if(u(this,"network"),u(this,"chain"),u(this,"provider"),u(this,"contracts"),u(this,"usdcId"),u(this,"usdcTreasuryId"),u(this,"tokenMessengerId"),u(this,"tokenMessengerStateId"),u(this,"messageTransmitterId"),u(this,"messageTransmitterStateId"),this.network=e,this.chain=t,this.provider=r,this.contracts=s,"Devnet"===e)throw new Error("CircleBridge not supported on Devnet");const d=o.D.get(this.network,this.chain);if(!d)throw new Error("No USDC contract configured for network=".concat(this.network," chain=").concat(this.chain));const{tokenMessengerState:m,messageTransmitterState:g,usdcTreasury:l}=h(e);if(null==(n=s.cctp)||!n.tokenMessenger)throw new Error("Circle Token Messenger contract for domain ".concat(t," not found"));if(null==(a=s.cctp)||!a.messageTransmitter)throw new Error("Circle Message Transmitter contract for domain ".concat(t," not found"));this.usdcId=d,this.usdcTreasuryId=l,this.tokenMessengerId=null==(c=s.cctp)?void 0:c.tokenMessenger,this.messageTransmitterId=null==(i=s.cctp)?void 0:i.messageTransmitter,this.tokenMessengerStateId=m,this.messageTransmitterStateId=g}transfer(e,t,r){var c=this;return(0,n.A)(function*(){const n=new a.T,i=o.be.get(c.network,t.chain),[d,...u]=yield(0,s.A)(a.b.getCoins(c.provider,e,c.usdcId));if(void 0===d)throw new Error("No USDC in wallet");const m=n.object(d.coinObjectId);u.length>0&&n.mergeCoins(m,u.map(e=>n.object(e.coinObjectId)));const[h]=n.splitCoins(m,[r]);n.moveCall({target:"".concat(c.tokenMessengerId,"::deposit_for_burn::deposit_for_burn"),arguments:[h,n.pure.u32(i),n.pure.address(t.address.toUniversalAddress().toString()),n.object(c.tokenMessengerStateId),n.object(c.messageTransmitterStateId),n.object("0x403"),n.object(c.usdcTreasuryId)],typeArguments:[c.usdcId]}),yield c.createUnsignedTx(n,"Sui.CircleBridge.Transfer")})()}async isTransferCompleted(e){const t=new a.T;t.moveCall({target:"".concat(this.messageTransmitterId,"::state::is_nonce_used"),arguments:[t.object(this.messageTransmitterStateId),t.pure.u32(e.sourceDomain),t.pure.u64(e.nonce)]});const r=await this.provider.devInspectTransactionBlock({sender:"0x0000000000000000000000000000000000000000000000000000000000000000",transactionBlock:t});try{return!!r.results[0].returnValues[0][0][0]}catch(s){return console.error("Error reading if nonce was used: ".concat(s)),!1}}redeem(e,t,r){var s=this;return(0,n.A)(function*(){const e=new a.T,[n]=e.moveCall({target:"".concat(s.messageTransmitterId,"::receive_message::receive_message"),arguments:[e.pure.vector("u8",o.G.serialize(t)),e.pure.vector("u8",o.a3.decode(r)),e.object(s.messageTransmitterStateId)]});if(!n)throw new Error("Failed to produce receipt");const[c]=e.moveCall({target:"".concat(s.tokenMessengerId,"::handle_receive_message::handle_receive_message"),arguments:[n,e.object(s.tokenMessengerStateId),e.object("0x403"),e.object(s.usdcTreasuryId)],typeArguments:[s.usdcId]});if(!c)throw new Error("Failed to produce stamp receipt ticket with burn message");const[i]=e.moveCall({target:"".concat(s.tokenMessengerId,"::handle_receive_message::deconstruct_stamp_receipt_ticket_with_burn_message"),arguments:[c]});if(!i)throw new Error("Failed to produce stamp receipt ticket");const[d]=e.moveCall({target:"".concat(s.messageTransmitterId,"::receive_message::stamp_receipt"),arguments:[i,e.object(s.messageTransmitterStateId)],typeArguments:["".concat(s.tokenMessengerId,"::message_transmitter_authenticator::MessageTransmitterAuthenticator")]});if(!d)throw new Error("Failed to produce stamped receipt");e.moveCall({target:"".concat(s.messageTransmitterId,"::receive_message::complete_receive_message"),arguments:[d,e.object(s.messageTransmitterStateId)]}),yield s.createUnsignedTx(e,"Sui.CircleBridge.Redeem")})()}async parseTransactionDetails(e){var t;const r=await this.provider.waitForTransaction({digest:e,options:{showEvents:!0,showEffects:!0,showInput:!0}});if(!r)throw new Error("Transaction not found");if(!r.events)throw new Error("Transaction events not found");const s=null==(t=r.events)?void 0:t.find(e=>e.type.includes("send_message::MessageSent"));if(!s)throw new Error("No MessageSent event found");const n=new Uint8Array((null==s?void 0:s.parsedJson).message),[a,c]=o.G.deserialize(n),{payload:i}=a,d=i.messageSender,u=i.mintRecipient,m=(0,o.d8)(this.network,a.sourceDomain);return{from:{chain:m,address:d},to:{chain:(0,o.d8)(this.network,a.destinationDomain),address:u},token:{chain:m,address:i.burnToken},amount:i.amount,message:a,id:{hash:c}}}static async fromRpc(e,t){const[r,s]=await a.b.chainFromRpc(e),n=t[s];if(n.network!==r)throw new Error("Network mismatch: ".concat(n.network," != ").concat(r));return new g(r,s,e,n.contracts)}createUnsignedTx(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return new c.S(e,this.network,this.chain,t,r)}}(0,i.r)("Sui","CircleBridge",g)},1394:(e,t,r)=>{r.d(t,{S:()=>a});var s=Object.defineProperty,n=(e,t,r)=>((e,t,r)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r)(e,"symbol"!=typeof t?t+"":t,r);class a{constructor(e,t,r,s){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n(this,"transaction"),n(this,"network"),n(this,"chain"),n(this,"description"),n(this,"parallelizable"),this.transaction=e,this.network=t,this.chain=r,this.description=s,this.parallelizable=a}}}}]);
//# sourceMappingURL=1388.b042d36c.chunk.js.map