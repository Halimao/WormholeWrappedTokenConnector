{"version":3,"file":"static/js/1472.f8bcff16.chunk.js","mappings":"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","sources":["../node_modules/@wormhole-foundation/wormhole-connect/lib/index-CrKGOs08.mjs","../node_modules/@wormhole-foundation/wormhole-connect/lib/create-OmEBpMgv.mjs"],"sourcesContent":["var d = Object.defineProperty;\nvar h = (i, e, r) => e in i ? d(i, e, { enumerable: !0, configurable: !0, writable: !0, value: r }) : i[e] = r;\nvar n = (i, e, r) => h(i, typeof e != \"symbol\" ? e + \"\" : e, r);\nimport { aP as m } from \"./address-BkeBsCZD.mjs\";\nimport { b as w } from \"./platform-ByoVE-An.mjs\";\nimport { c as p } from \"./create-OmEBpMgv.mjs\";\nimport { S as g } from \"./address-CHEvC20V.mjs\";\nimport { r as u } from \"./chain-uXEmLNMk.mjs\";\nclass c {\n  constructor(e, r, t, o) {\n    n(this, \"network\");\n    n(this, \"chain\");\n    n(this, \"provider\");\n    n(this, \"contracts\");\n    n(this, \"chainId\");\n    n(this, \"coreBridgePackageId\");\n    this.network = e, this.chain = r, this.provider = t, this.contracts = o, this.chainId = m(r);\n    const s = o.coreBridge;\n    if (!s)\n      throw new Error(`CoreBridge contract Address for chain ${r} not found`);\n    this.coreBridgePackageId = s;\n  }\n  getGuardianSet(e) {\n    throw new Error(\"Method not implemented.\");\n  }\n  getMessageFee() {\n    throw new Error(\"Method not implemented.\");\n  }\n  static async fromRpc(e, r) {\n    const [t, o] = await w.chainFromRpc(e), s = r[o];\n    if (s.network !== t)\n      throw new Error(`Network mismatch: ${s.network} !== ${t}`);\n    return new c(t, o, e, s.contracts);\n  }\n  async *verifyMessage(e, r) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async *publishMessage(e, r) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async parseTransaction(e) {\n    return (await this.parseMessages(e)).map((t) => ({\n      emitter: t.emitterAddress,\n      sequence: t.sequence,\n      chain: this.chain\n    }));\n  }\n  async getGuardianSetIndex() {\n    throw new Error(\"Method not implemented.\");\n  }\n  async parseMessages(e) {\n    var o;\n    const t = (o = (await this.provider.getTransactionBlock({\n      digest: e,\n      options: { showEvents: !0, showEffects: !0, showInput: !0 }\n    })).events) == null ? void 0 : o.filter((s) => s.type.endsWith(\"WormholeMessage\"));\n    if (!t || t.length == 0)\n      throw new Error(\"WormholeMessage not found\");\n    return t.map((s) => {\n      const a = s.parsedJson;\n      return p(\"Uint8Array\", {\n        emitterChain: this.chain,\n        emitterAddress: new g(a.sender).toUniversalAddress(),\n        sequence: BigInt(a.sequence),\n        guardianSet: 0,\n        // TODO: need to implement guardian set idx\n        timestamp: Number(a.timestamp),\n        consistencyLevel: a.consistency_level,\n        nonce: a.nonce,\n        signatures: [],\n        payload: new Uint8Array(a.payload)\n      });\n    });\n  }\n}\nu(\"Sui\", \"WormholeCore\", c);\nexport {\n  c as SuiWormholeCore\n};\n","import { dl as n, dm as s, aO as r, aN as u, dn as i, dp as m, dq as y } from \"./address-BkeBsCZD.mjs\";\nfunction t(e) {\n  return [...i, m(e)];\n}\nfunction h(e, o) {\n  const [d, c] = n(e), a = s(t(e), o);\n  return {\n    protocolName: d,\n    payloadName: c,\n    payloadLiteral: e,\n    ...s(y, o),\n    ...a,\n    hash: r(u(t(e), a))\n  };\n}\nexport {\n  h as c\n};\n"],"names":["d","Object","defineProperty","n","i","e","r","h","enumerable","configurable","writable","value","c","constructor","t","o","this","network","chain","provider","contracts","chainId","m","s","coreBridge","Error","concat","coreBridgePackageId","getGuardianSet","getMessageFee","fromRpc","w","chainFromRpc","verifyMessage","_wrapAsyncGenerator","publishMessage","parseTransaction","parseMessages","map","emitter","emitterAddress","sequence","getGuardianSetIndex","getTransactionBlock","digest","options","showEvents","showEffects","showInput","events","filter","type","endsWith","length","a","parsedJson","p","emitterChain","g","sender","toUniversalAddress","BigInt","guardianSet","timestamp","Number","consistencyLevel","consistency_level","nonce","signatures","payload","Uint8Array","u","_objectSpread","protocolName","payloadName","payloadLiteral","y","hash"],"sourceRoot":""}