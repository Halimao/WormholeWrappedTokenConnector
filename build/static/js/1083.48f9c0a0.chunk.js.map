{"version":3,"file":"static/js/1083.48f9c0a0.chunk.js","mappings":"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","sources":["../node_modules/@wormhole-foundation/wormhole-connect/lib/index-BgvV5NF2.mjs"],"sourcesContent":["var T = Object.defineProperty;\nvar l = (i, t, e) => t in i ? T(i, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : i[t] = e;\nvar s = (i, t, e) => l(i, typeof t != \"symbol\" ? t + \"\" : t, e);\nimport { I as p, ac as m, q as g, aR as d, aP as y, aU as o, L as f, aV as u, aW as b } from \"./address-BkeBsCZD.mjs\";\nimport { EvmWormholeCore as C } from \"./index-BjeolB9D.mjs\";\nimport { C as k } from \"./contract-C26uilM9.mjs\";\nimport { E as h } from \"./platform-tSU41623.mjs\";\nimport { E as v } from \"./unsignedTransaction-C0V0UbsS.mjs\";\nimport { r as A } from \"./chain-uXEmLNMk.mjs\";\nclass c {\n  constructor(t, e, a, n) {\n    s(this, \"network\");\n    s(this, \"chain\");\n    s(this, \"provider\");\n    s(this, \"contracts\");\n    s(this, \"chainId\");\n    s(this, \"core\");\n    s(this, \"gatewayAddress\");\n    s(this, \"gateway\");\n    s(this, \"tbtcTokenAddr\");\n    if (this.network = t, this.chain = e, this.provider = a, this.contracts = n, this.network !== \"Mainnet\")\n      throw new Error(\"TBTC is only supported on Mainnet\");\n    if (!this.contracts.tbtc)\n      throw new Error(\"TBTC contract address is required\");\n    const r = p.getNativeTbtcToken(this.chain);\n    if (!r)\n      throw new Error(\"Native tbtc token not found\");\n    this.chainId = m.get(t, e), this.core = new C(t, e, a, n), this.gatewayAddress = this.contracts.tbtc, this.gateway = new k(this.gatewayAddress, [\n      \"function sendTbtc(uint256 amount, uint16 recipientChain, bytes32 recipient, uint256 arbiterFee, uint32 nonce) payable returns (uint64)\",\n      \"function receiveTbtc(bytes calldata encodedVm)\"\n    ], a), this.tbtcTokenAddr = g(r);\n  }\n  static async fromRpc(t, e) {\n    const [a, n] = await h.chainFromRpc(t), r = e[n];\n    if (r.network !== a)\n      throw new Error(`Network mismatch: ${r.network} != ${a}`);\n    return new c(a, n, t, r.contracts);\n  }\n  async *transfer(t, e, a) {\n    const n = new d(t).toString(), r = await this.gateway.sendTbtc.populateTransaction(a, y(e.chain), e.address.toUniversalAddress().toUint8Array(), 0n, 0n);\n    r.value = await this.core.getMessageFee(), yield* this.approve(n, a, this.gatewayAddress), yield this.createUnsignedTransaction(o(r, n), \"TBTCBridge.Send\");\n  }\n  async *redeem(t, e) {\n    if (e.payloadName !== \"GatewayTransfer\")\n      throw new Error(\"Invalid VAA payload\");\n    const a = new d(t).toString(), n = await this.gateway.receiveTbtc.populateTransaction(f(e));\n    yield this.createUnsignedTransaction(o(n, a), \"TBTCBridge.Redeem\");\n  }\n  async *approve(t, e, a) {\n    const n = h.getTokenImplementation(this.provider, this.tbtcTokenAddr);\n    if (await n.allowance(t, a) < e) {\n      const w = await n.approve.populateTransaction(a, e);\n      yield this.createUnsignedTransaction(o(w, t), \"TBTC.Approve\");\n    }\n  }\n  createUnsignedTransaction(t, e) {\n    return new v(u(t, this.chainId), this.network, this.chain, e, !1);\n  }\n}\nA(b, \"TBTCBridge\", c);\nexport {\n  c as EvmTBTCBridge\n};\n"],"names":["T","Object","defineProperty","s","i","t","e","l","enumerable","configurable","writable","value","c","constructor","a","n","this","network","chain","provider","contracts","Error","tbtc","r","p","getNativeTbtcToken","chainId","m","get","core","C","gatewayAddress","gateway","k","tbtcTokenAddr","g","fromRpc","h","chainFromRpc","concat","transfer","_this","_wrapAsyncGenerator","d","toString","_awaitAsyncGenerator","sendTbtc","populateTransaction","y","address","toUniversalAddress","toUint8Array","getMessageFee","_asyncGeneratorDelegate","_asyncIterator","approve","createUnsignedTransaction","o","redeem","_this2","payloadName","receiveTbtc","f","_this3","getTokenImplementation","allowance","w","v","u","A","b"],"sourceRoot":""}