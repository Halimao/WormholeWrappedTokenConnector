{"version":3,"file":"static/js/5878.999ee634.chunk.js","mappings":"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","sources":["../node_modules/@wormhole-foundation/wormhole-connect/lib/unsignedTransaction-BDOQhqcZ.mjs","../node_modules/@wormhole-foundation/wormhole-connect/lib/index-D1vSocUD.mjs"],"sourcesContent":["var o = Object.defineProperty;\nvar c = (a, t, i) => t in a ? o(a, t, { enumerable: !0, configurable: !0, writable: !0, value: i }) : a[t] = i;\nvar s = (a, t, i) => c(a, typeof t != \"symbol\" ? t + \"\" : t, i);\nclass h {\n  constructor(t, i, n, r, e = !1) {\n    s(this, \"transaction\");\n    s(this, \"network\");\n    s(this, \"chain\");\n    s(this, \"description\");\n    s(this, \"parallelizable\");\n    this.transaction = t, this.network = i, this.chain = n, this.description = r, this.parallelizable = e;\n  }\n}\nexport {\n  h as A\n};\n","var A = Object.defineProperty;\nvar B = (d, e, s) => e in d ? A(d, e, { enumerable: !0, configurable: !0, writable: !0, value: s }) : d[e] = s;\nvar o = (d, e, s) => B(d, typeof e != \"symbol\" ? e + \"\" : e, s);\nimport { y as g, l as p, w, x as u } from \"./chunk-KJH4KKG6-CCerRpgp.mjs\";\nimport { a1 as S, D as I, be as U, aO as D, a3 as f, G as l, d8 as T } from \"./address-BkeBsCZD.mjs\";\nimport { A as R } from \"./platform-BVScq6Cn.mjs\";\nimport { A as E } from \"./unsignedTransaction-BDOQhqcZ.mjs\";\nimport { r as $ } from \"./chain-uXEmLNMk.mjs\";\nconst N = [\n  [\n    \"Mainnet\",\n    {\n      depositForBurn: \"0xa11ceb0b0700000a0701000802080e031614042a04052e30075e870108e5014000000001000201030004000001050701000100060b0001070304010801020805060108010309080900010002010205060c030e05050208000b010108020108020105010b0101090003060c0b01010900030108000004060c08000e0501030e66756e6769626c655f6173736574066f626a656374167072696d6172795f66756e6769626c655f73746f72650f746f6b656e5f6d657373656e6765720d46756e6769626c654173736574064f626a656374084d6574616461746111616464726573735f746f5f6f626a656374087769746864726177106465706f7369745f666f725f6275726e00000000000000000000000000000000000000000000000000000000000000019bce6734f7b63e835108e3bd8c36743d4709fe435f44791918801d0989640a9d0000010f0b0438000c060a000b060b0138010c050b000b050b020b0311020102\",\n      handleReceiveMessage: \"0xa11ceb0b0700000a0601000402040403080c051416072a53087d40000001010002000000030203000101040304000103060c0a020a020003060c060a02060a020108000101136d6573736167655f7472616e736d69747465720f746f6b656e5f6d657373656e67657207526563656970740f726563656976655f6d6573736167651668616e646c655f726563656976655f6d657373616765177e17751820e4b4371873ca8c30279be63bdea63b88ed0f2239c2eea10f17729bce6734f7b63e835108e3bd8c36743d4709fe435f44791918801d0989640a9d000001070b000e010e02110011010102\"\n    }\n  ],\n  [\n    \"Testnet\",\n    {\n      depositForBurn: \"0xa11ceb0b0700000a0701000802080e031614042a04052e30075e870108e5014000000001000201030004000001050701000100060b0001070304010801020805060108010309080900010002010205060c030e05050208000b010108020108020105010b0101090003060c0b01010900030108000004060c08000e0501030e66756e6769626c655f6173736574066f626a656374167072696d6172795f66756e6769626c655f73746f72650f746f6b656e5f6d657373656e6765720d46756e6769626c654173736574064f626a656374084d6574616461746111616464726573735f746f5f6f626a656374087769746864726177106465706f7369745f666f725f6275726e00000000000000000000000000000000000000000000000000000000000000015f9b937419dda90aa06c1836b7847f65bbbe3f1217567758dc2488be31a477b90000010f0b0438000c060a000b060b0138010c050b000b050b020b0311020102\",\n      handleReceiveMessage: \"0xa11ceb0b0700000a0601000402040403080c051416072a53087d40000001010002000000030203000101040304000103060c0a020a020003060c060a02060a020108000101136d6573736167655f7472616e736d69747465720f746f6b656e5f6d657373656e67657207526563656970740f726563656976655f6d6573736167651668616e646c655f726563656976655f6d657373616765081e86cebf457a0c6004f35bd648a2794698f52e0dde09a48619dcd3d4cc23d95f9b937419dda90aa06c1836b7847f65bbbe3f1217567758dc2488be31a477b9000001070b000e010e02110011010102\"\n    }\n  ]\n], v = S(N, [0, 1]);\nclass b {\n  constructor(e, s, n, t) {\n    o(this, \"network\");\n    o(this, \"chain\");\n    o(this, \"provider\");\n    o(this, \"contracts\");\n    o(this, \"usdcId\");\n    o(this, \"tokenMessengerId\");\n    o(this, \"messageTransmitterId\");\n    o(this, \"moveScripts\");\n    var r, i, c;\n    if (this.network = e, this.chain = s, this.provider = n, this.contracts = t, e === \"Devnet\")\n      throw new Error(\"CircleBridge not supported on Devnet\");\n    const a = I.get(this.network, this.chain);\n    if (!a)\n      throw new Error(`No USDC contract configured for network=${this.network} chain=${this.chain}`);\n    if (!((r = t.cctp) != null && r.tokenMessenger))\n      throw new Error(`Circle Token Messenger contract for domain ${s} not found`);\n    if (!((i = t.cctp) != null && i.messageTransmitter))\n      throw new Error(`Circle Message Transmitter contract for domain ${s} not found`);\n    if (!v.has(e))\n      throw new Error(\"No Aptos CCTP move scripts found\");\n    this.usdcId = a, this.tokenMessengerId = (c = t.cctp) == null ? void 0 : c.tokenMessenger, this.messageTransmitterId = t.cctp.messageTransmitter, this.moveScripts = v.get(e);\n  }\n  async *transfer(e, s, n) {\n    const t = new g(U.get(this.network, s.chain)), a = p.from(this.usdcId), r = p.from(s.address.toUniversalAddress().toUint8Array()), i = [new w(n), t, r, a], c = {\n      bytecode: this.moveScripts.depositForBurn,\n      functionArguments: i\n    };\n    yield this.createUnsignedTx(c, \"Aptos.CircleBridge.Transfer\");\n  }\n  async isTransferCompleted(e) {\n    const s = new g(e.sourceDomain).bcsToBytes(), n = new w(e.nonce).bcsToBytes(), t = D(new Uint8Array([...s, 45, ...n])), a = f.encode(t);\n    return (await this.provider.view({\n      payload: {\n        function: `${this.messageTransmitterId}::message_transmitter::is_nonce_used`,\n        functionArguments: [a]\n      }\n    }))[0];\n  }\n  async *redeem(e, s, n) {\n    const t = [\n      u.U8(l.serialize(s)),\n      u.U8(f.decode(n))\n    ], a = {\n      bytecode: this.moveScripts.handleReceiveMessage,\n      functionArguments: t\n    };\n    yield this.createUnsignedTx(a, \"Aptos.CircleBridge.Redeem\");\n  }\n  async parseTransactionDetails(e) {\n    var m;\n    const s = await this.provider.getTransactionByHash({ transactionHash: e }), n = this.messageTransmitterId.replace(/^0x0+/, \"0x\"), t = (m = s.events) == null ? void 0 : m.find((M) => M.type === `${n}::message_transmitter::MessageSent`);\n    if (!t)\n      throw new Error(\"No MessageSent event found\");\n    const a = f.decode(t.data.message), [r, i] = l.deserialize(a), { payload: c } = r, C = c.messageSender, k = c.mintRecipient, h = T(this.network, r.sourceDomain), y = T(this.network, r.destinationDomain), x = { chain: h, address: c.burnToken };\n    return {\n      from: { chain: h, address: C },\n      to: { chain: y, address: k },\n      token: x,\n      amount: c.amount,\n      message: r,\n      id: { hash: i }\n    };\n  }\n  static async fromRpc(e, s) {\n    const [n, t] = await R.chainFromRpc(e), a = s[t];\n    if (a.network !== n)\n      throw new Error(`Network mismatch: ${a.network} != ${n}`);\n    return new b(n, t, e, a.contracts);\n  }\n  createUnsignedTx(e, s, n = !1) {\n    return new E(e, this.network, this.chain, s, n);\n  }\n}\n$(\"Aptos\", \"CircleBridge\", b);\nexport {\n  b as AptosCircleBridge\n};\n"],"names":["o","Object","defineProperty","s","a","t","i","c","enumerable","configurable","writable","value","h","constructor","n","r","e","arguments","length","undefined","this","transaction","network","chain","description","parallelizable","A","d","B","v","S","depositForBurn","handleReceiveMessage","b","provider","contracts","Error","I","get","concat","cctp","tokenMessenger","messageTransmitter","has","usdcId","tokenMessengerId","messageTransmitterId","moveScripts","transfer","_this","_wrapAsyncGenerator","g","U","p","from","address","toUniversalAddress","toUint8Array","w","bytecode","functionArguments","createUnsignedTx","isTransferCompleted","sourceDomain","bcsToBytes","nonce","D","Uint8Array","f","encode","view","payload","function","redeem","_this2","u","U8","l","serialize","decode","parseTransactionDetails","m","getTransactionByHash","transactionHash","replace","events","find","M","type","data","message","deserialize","C","messageSender","k","mintRecipient","T","to","destinationDomain","token","burnToken","amount","id","hash","fromRpc","R","chainFromRpc","E","$"],"sourceRoot":""}